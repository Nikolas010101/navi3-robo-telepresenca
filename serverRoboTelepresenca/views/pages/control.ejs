<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('../partials/head'); %>
        <style>
            .video-player {
                width: 70%;
                border: 3px solid black;
                border-radius: 10px;
                margin: auto;
                text-align: center;
            }

            .placeholder {
                height: 100%;
                width: 50%;
                padding: 5px;
            }

            .icon {
                width: 40px;
                height: 40px;
                border-radius: 50%;
                display: flex;
                align-content: center;
                justify-content: center;
                border: 2px solid black;
                background-color: gray;
                transition: 0.5s;
            }

            .icon:hover {
                cursor: pointer;
                background-color: white;
            }

            .icon-img {
                width: 70%;
            }

            .call-buttons {
                display: grid;
                grid-template-columns: auto auto auto;
                justify-content: center;
            }

            .call-icon {
                margin: auto;
                width: 300px;
                border-radius: 50%;
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                transition: 0.5s;
            }

            .emotion-buttons {
                display: grid;
                grid-template-columns: repeat(5, auto);
                justify-content: space-around;
            }

            input[name="emotion"] {
                display: none;
            }

            input[name="emotion"]+label {
                padding: 5px 5px 0px 5px;
                width: 100px;
                text-align: center;
                background-color: gray;
                border-radius: 5px;
                color: white;
                transition: 0.1275s;
            }

            input[name="emotion"]+label span {
                font-size: 1.3em;
            }

            input[name="emotion"]+label:hover {
                background-color: lightgrey;
                color: black;
            }

            input[name="emotion"]:checked+label {
                background-color: lightblue;
                color: black;
            }

            .sliders {
                display: grid;
                grid-template-columns: auto auto;
                justify-content: space-around;
            }

            .slider-container {
                width: 220px;
                margin: 0px;
                background-color: white;
                border-radius: 10px;
                border: 3px solid gray;
                display: grid;
                grid-template-rows: auto auto;
                text-align: center;
            }

            .slider-inner-container {
                display: grid;
                grid-template-columns: auto auto;
                justify-content: space-between;
                align-content: center;
                margin: 0 5px 0 5px;
            }

            .slider-text {
                font-family: sans-serif;
                font-weight: bold;
                color: gray;
                margin: 0;
            }

            .slider {
                margin: 0;
            }

            .slider-label {
                margin: 0;
                font-size: 1.75em;
                color: gray;
                font-family: sans-serif;
                font-weight: bold;
            }
        </style>
</head>

<body class="container">
    <header><%- include('../partials/header'); %></header>
    <main>
        <div class="jumbotron">
            <h1>Controle de dispostivo embarcado</h1>
            <div class="video-player">
                <img class="placeholder" src="/img/wip.png" alt="Image placeholder">
            </div>
            <div class="call-buttons">
                <div class="call-icon">
                    <div class="icon" title="Desligar">
                        <img class="icon-img" src="/img/phone.svg" alt="Desligar" />
                    </div>
                    <p class="call-text">Desligar</p>
                </div>
                <div class="call-icon">
                    <div class="icon" title="Ligar/desligar microfone">
                        <img class="icon-img" src="/img/mic-on.svg" alt="Desligar microfone" />
                    </div>
                    <p class="call-text">Ligar/desligar microfone</p>
                </div>
                <div class="call-icon">
                    <div class="icon" title="Desligar c√¢mera">
                        <img class="icon-img" src="/img/video-on.svg" alt="Desligar c√¢mera" />
                    </div>
                    <p class="call-text">Ligar/desligar c√¢mera</p>
                </div>
            </div>
            <div class="emotion-buttons">
                <div class="emotion">
                    <input type="radio" id="happy" name="emotion" value="happy">
                    <label for="happy">
                        <span class="emoji">üòÄ</span>
                        <p>Felicidade</p>
                    </label>
                </div>

                <div class="emotion">
                    <input type="radio" id="surprise" name="emotion" value="surprise">
                    <label for="surprise">
                        <span class="emoji">üòÆ</span>
                        <p>Surpresa</p>
                    </label>
                </div>

                <div class="emotion">
                    <input type="radio" id="sad" name="emotion" value="sad">
                    <label for="sad">
                        <span class="emoji">üò¢</span>
                        <p>Tristeza</p>
                    </label>
                </div>

                <div class="emotion">
                    <input type="radio" id="doubt" name="emotion" value="doubt">
                    <label for="doubt">
                        <span class="emoji">ü§î</span>
                        <p>D√∫vida</p>
                    </label>
                </div>

                <div class="emotion">
                    <input type="radio" id="neutral" name="emotion" value="neutral">
                    <label for="neutral">
                        <span class="emoji">üòê</span>
                        <p>Neutro</p>
                    </label>
                </div>
            </div>
            <div class="sliders">
                <div class="slider-container">
                    <h2 class="slider-text">Controle pan</h2>
                    <div class="slider-inner-container">
                        <input class="slider" type="range" min=-90 max=90 id="pan" />
                        <label for="pan" class="slider-label" id="pan-label">0¬∞</label>
                    </div>
                </div>
                <div class="slider-container">
                    <h2 class="slider-text">Controle tilt</h2>
                    <div class="slider-inner-container">
                        <input class="slider" type="range" min=-90 max=90 id="tilt" />
                        <label for="tilt" class="slider-label" id="tilt-label">0¬∞</label>
                    </div>
                </div>
            </div>
        </div>
    </main>
    <footer><%- include('../partials/footer'); %></footer>
    <script>
        // Create WebSocket connection
        const ws = new WebSocket("ws://localhost:3000")

        // Emotion buttons
        const emotionButtons = document.querySelectorAll('input[name="emotion"]')
        emotionButtons.forEach(button => {
            button.addEventListener("change", () => fetch(`/api/fex/${button.value}`))
        })

        // Updates emotion to the last value sent
        async function updateEmotion() {
            const currentEmotion = await fetch("/api/getEmotion").then(r => r.json())
            document.getElementById(currentEmotion).checked = true
        }

        // Servo sliders
        const sliders = document.querySelectorAll('input[type="range"]')

        // Event listener changes slider labels visually
        sliders.forEach(slider => {
            slider.addEventListener("input", () => {
                const label = document.getElementById(`${slider.id}-label`)
                label.innerHTML = `${slider.value}¬∞`
                sendPosition()
            })
        })

        const panSlider = document.getElementById("pan")
        const panLabel = document.getElementById("pan-label")

        const tiltSlider = document.getElementById("tilt")
        const tiltLabel = document.getElementById("tilt-label")

        // Update sliders with last value sent
        async function updateSliders() {
            const currentPosition = await fetch("/api/getPosition").then(r => r.json())
            sliders.forEach(slider => {
                slider.value = currentPosition[slider.id]
                document.getElementById(`${slider.id}-label`).innerHTML = `${slider.value}¬∞`
            })
        }

        // Send servo position to server
        async function sendPosition() {
            fetch('/api/setPosition', {
                method: 'POST',
                headers: {
                    'content-type': 'application/json'
                },
                body: JSON.stringify({
                    pan: Number(panSlider.value),
                    tilt: Number(tiltSlider.value)
                })
            })
        }

        updateEmotion()
        updateSliders()
    </script>
</body>

</html>